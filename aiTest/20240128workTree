'Topic20240128-20240129':cnn in FashionMNIST classification

the folder
'fashionMnist' is the reconstruct version of the ann model in the '20240127'
mainly include the
'buildNet.py' for the net build in the first time and save a modelFile in the 'modelFilePath'
'cnn.py' is the CNN model(may slightly variation when training)
'parameter.py' for the hyperhyperparameter control include the file dependencies paths
'startTrain.py' for the main training loop, it first read the file from the 'modelFilePath'
'testTheModel.py' is the slightly varied version of the previous 'testTheModel.py' file in the '20240127'

the file
'buildNet.py' mainly build a cnn net and the optimizer, and save them in the 'CHECKPOINT_PATH' and create a 'epoch.log' file to trace the current latest model. it use the load and save tech in[1]
'cnn.py' is a hard coded model has fixed hyperparameter. this model is from[2]
'startTrain.py' is the main training loop include the dataLoader[3] and load tech in[1] and slightly varied copy version of main trainloop in[2]

[1]['20240127workTree'.[1]]SAVING AND LOADING MODELS https://pytorch.org/tutorials/beginner/saving_loading_models.html#:~:text=Saving%20the%20model's%20state_dict%20with,pt%20or%20.pth%20file%20extension.
[2]['20240127workTree'.[5]]TRAINING A CLASSIFIER https://pytorch.org/tutorials/beginner/blitz/cifar10_tutorial.html#sphx-glr-beginner-blitz-cifar10-tutorial-py
[3]['20240127workTree'.[4]]DATASETS & DATALOADERS https://pytorch.org/tutorials/beginner/basics/data_tutorial.html

current 'mileStone':
use the cnn the FashionMNIST classification task can be upto 91% accuracy
with compare to the previous ann version in '20240127' is 87%
